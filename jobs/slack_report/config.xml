<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>slack report</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.plugins.slack.SlackNotifier_-SlackJobProperty plugin="slack@1.8.1">
      <teamDomain></teamDomain>
      <token></token>
      <room></room>
      <startNotification>false</startNotification>
      <notifySuccess>false</notifySuccess>
      <notifyAborted>false</notifyAborted>
      <notifyNotBuilt>false</notifyNotBuilt>
      <notifyUnstable>false</notifyUnstable>
      <notifyFailure>false</notifyFailure>
      <notifyBackToNormal>false</notifyBackToNormal>
      <notifyRepeatedFailure>false</notifyRepeatedFailure>
      <includeTestSummary>false</includeTestSummary>
      <showCommitList>false</showCommitList>
      <includeCustomMessage>false</includeCustomMessage>
      <customMessage></customMessage>
    </jenkins.plugins.slack.SlackNotifier_-SlackJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>rm -rf mevoco_ci/*
rm -rf zstack_ci/*</command>
    </hudson.tasks.Shell>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.37">
      <project>build_mevoco</project>
      <filter>mevoco_ci/latest/*</filter>
      <target></target>
      <excludes></excludes>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector"/>
      <optional>true</optional>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.37">
      <project>build_zstack</project>
      <filter>zstack_ci/latest/*</filter>
      <target></target>
      <excludes></excludes>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector"/>
      <optional>true</optional>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.Shell>
      <command>if [ &quot;${OVERALL_MEVOCO_BUILD_RESULT}&quot; != &quot;&quot; ]; then
    MEVOCO_BIN=$(basename `ls mevoco_ci/latest/*.bin`)
    rm -rf mevoco_ci/latest/*.bin
	rm -rf mevoco_ci/${OVERALL_MEVOCO_BUILD_NUMBER}/build_mevoco.log
    mkdir -p mevoco_ci/${OVERALL_MEVOCO_BUILD_NUMBER}
	curl -u mevoco:zstack.org http://192.168.200.127:8080/job/build_mevoco/${OVERALL_MEVOCO_BUILD_NUMBER}/consoleText &gt; mevoco_ci/${OVERALL_MEVOCO_BUILD_NUMBER}/build_mevoco.log
	rm -rf /tmp/build_mevoco_report.json
	if [ &quot;${OVERALL_MEVOCO_BUILD_RESULT}&quot; = &quot;Success&quot; ]; then
		COLOR=&quot;00FF00&quot;
	elif [ &quot;${OVERALL_MEVOCO_BUILD_RESULT}&quot; = &quot;Failure&quot; ]; then
		COLOR=&quot;FF0000&quot;
	elif [ &quot;${OVERALL_MEVOCO_BUILD_RESULT}&quot; = &quot;Unstable&quot; ]; then
		COLOR=&quot;FFFF00&quot;
	fi
	COMPONENTS=&quot;zstack zstack-utility zstack-agent mevoco-ui zstack-dashboard premium&quot;
	rm -rf /tmp/slack_report_query
	curl -u mevoco:zstack.org http://192.168.200.127:8080/job/build_mevoco/${OVERALL_MEVOCO_BUILD_NUMBER}/api/xml &gt; /tmp/slack_report_query
    if [ &quot;${PRODUCT_VERSION}&quot; != &quot;&quot; ]; then
    	TRIGGERS=&quot;build_mevoco_release_candidate&quot;
    else
		TRIGGERS=&quot;&quot;
    fi
	for C in ${COMPONENTS}; do
		NOT_FOUND=0
		grep &quot;Started by upstream project \&quot;${C}\&quot; build number&quot; /tmp/slack_report_query || NOT_FOUND=1
    	if [ ${NOT_FOUND} -eq 0 ]; then
   	 		TRIGGERS=&quot;${TRIGGERS} ${C}&quot;
    	fi
	done
    DURATION=`cat /tmp/slack_report_query | awk -F &quot;&lt;duration&gt;&quot; &apos;{print $2}&apos; | awk -F &quot;&lt;/duration&gt;&quot; &apos;{print $1}&apos;`
    DURATION_MIN=`echo &quot;${DURATION}/60000&quot; | bc`
    DURATION_SEC=`echo &quot;${DURATION}/1000%60&quot; | bc`
	echo &quot;{\&quot;fallback\&quot;:\&quot;build_mevoco(triggered by ${TRIGGERS}) - #${OVERALL_MEVOCO_BUILD_NUMBER}(&lt;http://192.168.200.1/mirror/mevoco_ci/${OVERALL_MEVOCO_BUILD_NUMBER}/|Open&gt;|&lt;http://192.168.200.1/mirror/mevoco_ci/${OVERALL_MEVOCO_BUILD_NUMBER}/${MEVOCO_BIN}|Download&gt;) ${OVERALL_MEVOCO_BUILD_RESULT} after ${DURATION_MIN} min ${DURATION_MIN} sec (&lt;http://192.168.200.1/mirror/mevoco_ci/${OVERALL_MEVOCO_BUILD_NUMBER}/build_mevoco.log|Log&gt;)\&quot;,\&quot;fields\&quot;:[{\&quot;value\&quot;:\&quot;build_mevoco(triggered by ${TRIGGERS}) - #${OVERALL_MEVOCO_BUILD_NUMBER}(&lt;http://192.168.200.1/mirror/mevoco_ci/${OVERALL_MEVOCO_BUILD_NUMBER}/|Open&gt;|&lt;http://192.168.200.1/mirror/mevoco_ci/${OVERALL_MEVOCO_BUILD_NUMBER}/${MEVOCO_BIN}|Download&gt;)\&quot;,\&quot;short\&quot;:true},{\&quot;value\&quot;:\&quot;${OVERALL_MEVOCO_BUILD_RESULT} after ${DURATION_MIN} min ${DURATION_MIN} sec (&lt;http://192.168.200.1/mirror/mevoco_ci/${OVERALL_MEVOCO_BUILD_NUMBER}/build_mevoco.log|Log&gt;)\&quot;,\&quot;short\&quot;:true}],\&quot;color\&quot;:\&quot;${COLOR}\&quot;},&quot; &gt;&gt; /tmp/build_mevoco_report.json
    if [ &quot;${OVERALL_MEVOCO_BUILD_RESULT}&quot; == &quot;Failure&quot; ]; then
    	BUILD_VERSIONS_FILE=/tmp/build_mevoco_versions.${OVERALL_MEVOCO_BUILD_NUMBER}
    else
        BUILD_VERSIONS_FILE=mevoco_ci/latest/versions.txt
    fi
	for i in $(seq `wc -l ${BUILD_VERSIONS_FILE}|awk &apos;{print $1}&apos;`); do
		COMPONENT=`sed -n &quot;${i}p&quot; ${BUILD_VERSIONS_FILE} | awk &apos;{print $1}&apos; | awk -F &apos;:&apos; &apos;{print $1}&apos;`
    	SUBJECT=`sed -n &quot;${i}p&quot; ${BUILD_VERSIONS_FILE} | awk &apos;{for (i=2; i&lt;NF; i++) printf(&quot;%s &quot;,$i);print $i}&apos; | sed &apos;s/\&quot;/\\\&quot;/g&apos;`
    	NOT_FOUND=0
    	grep &quot;Started by upstream project \&quot;${COMPONENT}\&quot; build number&quot; /tmp/slack_report_query || NOT_FOUND=1
   	 	if [ ${NOT_FOUND} -eq 0 ]; then
    		echo &quot;{\&quot;fields\&quot;:[{\&quot;value\&quot;:\&quot;${COMPONENT}:\&quot;,\&quot;short\&quot;:true},{\&quot;value\&quot;:\&quot;${SUBJECT}\&quot;,\&quot;short\&quot;:true}],\&quot;color\&quot;:\&quot;${COLOR}\&quot;},&quot; &gt;&gt; /tmp/build_mevoco_report.json
    	else
    		echo &quot;{\&quot;fields\&quot;:[{\&quot;value\&quot;:\&quot;${COMPONENT}:\&quot;,\&quot;short\&quot;:true},{\&quot;value\&quot;:\&quot;${SUBJECT}\&quot;,\&quot;short\&quot;:true}],\&quot;color\&quot;:\&quot;AAAAAA\&quot;},&quot; &gt;&gt; /tmp/build_mevoco_report.json
    	fi
	done
	echo &quot;{}&quot; &gt;&gt; /tmp/build_mevoco_report.json
	curl -X POST --data-urlencode &quot;payload={\&quot;username\&quot; : \&quot;jenkins\&quot;, \&quot;attachments\&quot; : [`cat /tmp/build_mevoco_report.json`]}&quot; https://hooks.slack.com/services/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
fi

if [ &quot;${OVERALL_ZSTACK_BUILD_RESULT}&quot; != &quot;&quot; ]; then
    ZSTACK_BIN=$(basename `ls zstack_ci/latest/*.bin`)
    rm -rf zstack_ci/latest/*.bin
	rm -rf zstack_ci/${OVERALL_ZSTACK_BUILD_NUMBER}/build_zstack.log
    mkdir -p zstack_ci/${OVERALL_ZSTACK_BUILD_NUMBER}
	curl -u mevoco:zstack.org http://192.168.200.127:8080/job/build_zstack/${OVERALL_ZSTACK_BUILD_NUMBER}/consoleText &gt; zstack_ci/${OVERALL_ZSTACK_BUILD_NUMBER}/build_zstack.log
	rm -rf /tmp/build_zstack_report.json
	if [ &quot;${OVERALL_ZSTACK_BUILD_RESULT}&quot; = &quot;Success&quot; ]; then
		COLOR=&quot;00FF00&quot;
	elif [ &quot;${OVERALL_ZSTACK_BUILD_RESULT}&quot; = &quot;Failure&quot; ]; then
		COLOR=&quot;FF0000&quot;
	elif [ &quot;${OVERALL_ZSTACK_BUILD_RESULT}&quot; = &quot;Unstable&quot; ]; then
		COLOR=&quot;FFFF00&quot;
	fi
	COMPONENTS=&quot;zstack zstack-utility zstack-agent mevoco-ui zstack-dashboard premium&quot;
	rm -rf /tmp/slack_report_query
	curl -u mevoco:zstack.org http://192.168.200.127:8080/job/build_zstack/${OVERALL_ZSTACK_BUILD_NUMBER}/api/xml &gt; /tmp/slack_report_query
    if [ &quot;${PRODUCT_VERSION}&quot; != &quot;&quot; ]; then
    	TRIGGERS=&quot;build_zstack_release_candidate&quot;
    else
		TRIGGERS=&quot;&quot;
    fi
	for C in ${COMPONENTS}; do
		NOT_FOUND=0
		grep &quot;Started by upstream project \&quot;${C}\&quot; build number&quot; /tmp/slack_report_query || NOT_FOUND=1
    	if [ ${NOT_FOUND} -eq 0 ]; then
   	 		TRIGGERS=&quot;${TRIGGERS} ${C}&quot;
    	fi
	done
    DURATION=`cat /tmp/slack_report_query | awk -F &quot;&lt;duration&gt;&quot; &apos;{print $2}&apos; | awk -F &quot;&lt;/duration&gt;&quot; &apos;{print $1}&apos;`
    DURATION_MIN=`echo &quot;${DURATION}/60000&quot; | bc`
    DURATION_SEC=`echo &quot;${DURATION}/1000%60&quot; | bc`
	echo &quot;{\&quot;fallback\&quot;:\&quot;build_zstack(triggered by ${TRIGGERS}) - #${OVERALL_ZSTACK_BUILD_NUMBER}(&lt;http://192.168.200.1/mirror/zstack_ci/${OVERALL_ZSTACK_BUILD_NUMBER}/|Open&gt;|&lt;http://192.168.200.1/mirror/zstack_ci/${OVERALL_ZSTACK_BUILD_NUMBER}/${ZSTACK_BIN}|Download&gt;) ${OVERALL_ZSTACK_BUILD_RESULT} after ${DURATION_MIN} min ${DURATION_MIN} sec (&lt;http://192.168.200.1/mirror/zstack_ci/${OVERALL_ZSTACK_BUILD_NUMBER}/build_zstack.log|Log&gt;)\&quot;,\&quot;fields\&quot;:[{\&quot;value\&quot;:\&quot;build_zstack(triggered by ${TRIGGERS}) - #${OVERALL_ZSTACK_BUILD_NUMBER}(&lt;http://192.168.200.1/mirror/zstack_ci/${OVERALL_ZSTACK_BUILD_NUMBER}/|Open&gt;|&lt;http://192.168.200.1/mirror/zstack_ci/${OVERALL_ZSTACK_BUILD_NUMBER}/${ZSTACK_BIN}|Download&gt;)\&quot;,\&quot;short\&quot;:true},{\&quot;value\&quot;:\&quot;${OVERALL_ZSTACK_BUILD_RESULT} after ${DURATION_MIN} min ${DURATION_MIN} sec (&lt;http://192.168.200.1/mirror/zstack_ci/${OVERALL_ZSTACK_BUILD_NUMBER}/build_zstack.log|Log&gt;)\&quot;,\&quot;short\&quot;:true}],\&quot;color\&quot;:\&quot;${COLOR}\&quot;},&quot; &gt;&gt; /tmp/build_zstack_report.json
    if [ &quot;${OVERALL_ZSTACK_BUILD_RESULT}&quot; == &quot;Failure&quot; ]; then
    	BUILD_VERSIONS_FILE=/tmp/build_zstack_versions.${OVERALL_ZSTACK_BUILD_NUMBER}
    else
        BUILD_VERSIONS_FILE=zstack_ci/latest/versions.txt
    fi
	for i in $(seq `wc -l ${BUILD_VERSIONS_FILE}|awk &apos;{print $1}&apos;`); do
		COMPONENT=`sed -n &quot;${i}p&quot; ${BUILD_VERSIONS_FILE} | awk &apos;{print $1}&apos; | awk -F &apos;:&apos; &apos;{print $1}&apos;`
    	SUBJECT=`sed -n &quot;${i}p&quot; ${BUILD_VERSIONS_FILE} | awk &apos;{for (i=2; i&lt;NF; i++) printf(&quot;%s &quot;,$i);print $i}&apos; | sed &apos;s/\&quot;/\\\&quot;/g&apos;`
    	NOT_FOUND=0
    	grep &quot;Started by upstream project \&quot;${COMPONENT}\&quot; build number&quot; /tmp/slack_report_query || NOT_FOUND=1
   	 	if [ ${NOT_FOUND} -eq 0 ]; then
    		echo &quot;{\&quot;fields\&quot;:[{\&quot;value\&quot;:\&quot;${COMPONENT}:\&quot;,\&quot;short\&quot;:true},{\&quot;value\&quot;:\&quot;${SUBJECT}\&quot;,\&quot;short\&quot;:true}],\&quot;color\&quot;:\&quot;${COLOR}\&quot;},&quot; &gt;&gt; /tmp/build_zstack_report.json
    	else
    		echo &quot;{\&quot;fields\&quot;:[{\&quot;value\&quot;:\&quot;${COMPONENT}:\&quot;,\&quot;short\&quot;:true},{\&quot;value\&quot;:\&quot;${SUBJECT}\&quot;,\&quot;short\&quot;:true}],\&quot;color\&quot;:\&quot;AAAAAA\&quot;},&quot; &gt;&gt; /tmp/build_zstack_report.json
    	fi
	done
	echo &quot;{}&quot; &gt;&gt; /tmp/build_zstack_report.json
	curl -X POST --data-urlencode &quot;payload={\&quot;username\&quot; : \&quot;jenkins\&quot;, \&quot;attachments\&quot; : [`cat /tmp/build_zstack_report.json`]}&quot; https://hooks.slack.com/services/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
fi</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <be.certipost.hudson.plugin.SCPRepositoryPublisher plugin="scp@1.8">
      <siteName>192.168.200.1</siteName>
      <entries>
        <be.certipost.hudson.plugin.Entry>
          <filePath></filePath>
          <sourceFile>mevoco_ci/*/*</sourceFile>
          <keepHierarchy>true</keepHierarchy>
        </be.certipost.hudson.plugin.Entry>
        <be.certipost.hudson.plugin.Entry>
          <filePath></filePath>
          <sourceFile>zstack_ci/*/*</sourceFile>
          <keepHierarchy>true</keepHierarchy>
        </be.certipost.hudson.plugin.Entry>
      </entries>
    </be.certipost.hudson.plugin.SCPRepositoryPublisher>
  </publishers>
  <buildWrappers/>
</project>